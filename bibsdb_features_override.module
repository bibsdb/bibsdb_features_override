<?php
/**
 * @file
 * Code that overrides the DDBCMS feautures.
 */


/**
 * Implements hook_ctools_plugin_api().
 */
function pathautotest_ctools_plugin_api($module = NULL, $api = NULL) {
  if ($module == "strongarm" && $api == "strongarm") {
    return array("version" => "1");
  }
}

/**
 * Implements hook_field_default_field_bases_alter().
 */
function bibsdb_features_override_field_default_field_bases_alter(&$data) {
  if (isset($data['field_ding_event_category'])) {
    $data['field_ding_event_category']['cardinality'] = 7; /* WAS: 1 */
  }
  if (isset($data['field_ding_event_target'])) {
    $data['field_ding_event_target']['cardinality'] = 4; /* WAS: 1 */
  }
}

/**
 * Implements hook_field_default_field_instances_alter().
 */
function bibsdb_features_override_field_default_field_instances_alter(&$data) {
  
  // Make lead and body on ding_page not required.
  if (isset($data['node-ding_page-field_ding_page_body'])) {
    $data['node-ding_page-field_ding_page_body']['required'] = 0; /* WAS: 1 */
  }
  if (isset($data['node-ding_page-field_ding_page_lead'])) {
    $data['node-ding_page-field_ding_page_lead']['required'] = 0; /* WAS: 1 */

  }
  if (isset($data['node-ding_group-field_ding_group_body'])) {
    $data['node-ding_group-field_ding_group_body']['required'] = 0; /* WAS: 1 */
  }
  if (isset($data['node-ding_group-field_ding_group_lead'])) {
    $data['node-ding_group-field_ding_group_lead']['required'] = 0; /* WAS: 1 */
  }

  if (isset($data['node-ding_group-field_ding_group_lead'])) {
    $data['node-ding_group-field_ding_group_lead']['required'] = 0; /* WAS: 1 */
  }

  if (isset($data['node-ding_group-field_ding_group_lead'])) {
    $data['node-ding_group-field_ding_group_lead']['required'] = 0; /* WAS: 1 */
  }

  // Make group selection on events required. Choose between "BÃ¸rn" and "Voksen"
  if (isset($data['node-ding_event-ding_event_groups_ref'])) {
    $data['node-ding_event-ding_event_groups_ref']['required'] = 1; /* WAS: 0 */
  }

  // Change event category widgit from select box to chack boxes
  if (isset($data['node-ding_event-field_ding_event_category'])) {
   $data['node-ding_event-field_ding_event_category']['widget']['type'] = 'options_buttons'; /* WAS: 'options_select' */
  }

  // Change event target widgit from select box to check boxes
  if (isset($data['node-ding_event-field_ding_event_target'])) {
    $data['node-ding_event-field_ding_event_target']['widget']['type'] = 'options_buttons'; /* WAS: 'options_select' */
  }

  // Set ding_event_lead description to display char counter
  if (isset($data['node-ding_event-field_ding_event_lead'])) {
   $data['node-ding_event-field_ding_event_lead']['description'] = '0 ud af 255 tegn'; /* WAS: '' */
  }
}


function bibsdb_features_override_strongarm_alter(&$data) {


  // Make default state unpublished


  // Make news content unpublished and promoted as default
  if (isset($data['node_options_ding_news'])) {
    $data['node_options_ding_news']->value[0] = 'promote'; /* WAS: 'status' */
  }

  // Make event content unpublished and promoted as default
  if (isset($data['node_options_ding_event'])) {
    $data['node_options_ding_event']->value[0] = 'promote'; /* WAS: 'status' */
  }

  // Make page content unpublished and promoted as default
  if (isset($data['node_options_ding_page'])) {
    $data['node_options_ding_page']->value[0] = 'promote'; /* WAS: 'status' */
  }

  // Change the default event date format
  if (isset($data['date_format_ding_date_only_version2'])) {
    $data['date_format_ding_date_only_version2']->value = 'j. F Y'; /* WAS: 'd.m.y' */
  }

  // Path auto patterns

  // Page pattern
  if (isset($data['pathauto_node_ding_page_pattern'])) {
    $data['pathauto_node_ding_page_pattern']->value = 'indhold/[node:title]'; /* WAS: '[node:menu-link:parent:url:relative]/[node:menu-link:title]' */
  }

}

/**
 * Nodes made not searchable.
 * Sort order of news list in groups changed to publication date from created date.
 * Implements hook_views_default_views_alter().
 */
function bibsdb_features_override_views_default_views_alter(&$data) {
  if (isset($data['ding_node_search'])) {
    $data['ding_node_search']->display['default']->display_options['filters']['type']['value']['read_circuit_set'] = 'read_circuit_set'; /* WAS: '' */
  }

  if (isset($data['ding_news'])) {
    // Change sort order of all news views
    $data['ding_news']->display['default']->display_options['sorts']['published_at'] = array(
      'id' => 'published_at',
      'table' => 'publication_date',
      'field' => 'published_at',
      'order' => 'DESC',
      );
    unset($data['ding_news']->display['default']->display_options['sorts']['created']);

    // Display the published date instead of the created date in news lists on groups
    $data['ding_news']->display['ding_news_groups_list']->display_options['fields']['created'] = array(
      'id' => 'published_at',
      'table' => 'publication_date',
      'field' => 'published_at',
      'ui_name' => 'Date',
      'label' => '',
      'element_type' => 'span',
      'element_class' => 'news-date',
      'element_label_colon' => FALSE,
      'element_default_classes' => FALSE,
      'date_format' => 'ding_long_date_only',
      'second_date_format' => 'ding_date_only',
      );

    // Change sort order of news on frontpage
    $data['ding_news']->display['ding_news_frontpage_list']->display_options['sorts']['published_at'] = array(
      'id' => 'published_at',
      'table' => 'publication_date',
      'field' => 'published_at',
      'order' => 'DESC',
      );
    unset($data['ding_news']->display['ding_news_frontpage_list']->display_options['sorts']['created']);

    // Display the published date instead of the created date on frontpage
    $data['ding_news']->display['ding_news_frontpage_list']->display_options['fields']['created'] = array(
      'id' => 'published_at',
      'table' => 'publication_date',
      'field' => 'published_at',
      'ui_name' => 'Date',
      'label' => '',
      'element_type' => 'span',
      'element_class' => 'news-date',
      'element_label_colon' => FALSE,
      'element_default_classes' => FALSE,
      'date_format' => 'ding_long_date_only',
      'second_date_format' => 'ding_date_only',
      );

    // Display the published date instead of the created date on the main news list
    $data['ding_news']->display['ding_news_list']->display_options['fields']['created'] = array(
      'id' => 'published_at',
      'table' => 'publication_date',
      'field' => 'published_at',
      'ui_name' => 'Date',
      'label' => '',
      'element_type' => 'span',
      'element_class' => 'news-date',
      'element_label_colon' => FALSE,
      'element_wrapper_type' => 0,
      'element_default_classes' => FALSE,
      'date_format' => 'ding_long_date_only',
      'second_date_format' => 'ding_date_only',
      );


    // ding_staff

    // Don't use pager -display all items
    $data['ding_staff']->display['default']->display_options['pager']['type'] = 'none'; /* WAS: 'full' */
    $data['ding_staff']->display['default']->display_options['pager']['options']['offset'] = 0; /* WAS: '' */
    // Make department required to avoid people in the beginning of the list not gruoped by apartment.
    $data['ding_staff']->display['ding_staff_library_departments']->display_options['relationships']['field_ding_staff_department_tid']['required'] = TRUE; /* WAS: '' */
  }
}


